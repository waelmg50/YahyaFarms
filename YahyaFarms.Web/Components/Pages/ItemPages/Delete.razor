@page "/items/delete"

@using Microsoft.EntityFrameworkCore
@using YahyaFarms.Models
@using YahyaFarms.Web.Service.IService;
@inject IDbContextFactory<YahyaFarms.Web.Data.YahyaFarmsWebDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject IFileUpload iFileUpload;
@inject IJSRuntime myJSRunTime;
@rendermode InteractiveServer

<PageTitle>حذف الصنف</PageTitle>

<h1>حذف الصنف</h1>

<h3>هل أنت متأكد من حذف هذا الصنف?</h3>
<div>
    <h4>بيانات الصنف</h4>
    <hr />
    @if (item is null)
    {
        <p><em>تحميل ...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">اسم الصنف</dt>
            <dd class="col-sm-10">@item.ItemName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">الوصف</dt>
            <dd class="col-sm-10">@item.ItemDescription</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">السعر الحالي</dt>
            <dd class="col-sm-10">@item.CurrentPrice</dd>
        </dl>
        <EditForm method="post" Model="item" OnValidSubmit="DeleteItem" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(item is null)">حذف</button> |
            <a href="/items">العودة للقائمة السابقة</a>
        </EditForm>
        <br />
        <div class="form-group">
            <div class="row" style="position:relative">
                @if (ShowSpinner)
                {
                    <div class="col-md-12">
                        <span><i class="fas fa-spinner fa-pulse"></i>من فضلك انتظر <br />جاري تحميل الصور</span>
                    </div>
                }
                @if (item.ImagesUrls != null && item.ImagesUrls.Count > 0)
                {
                    int iSerial = 1, iRowCount = item.ImagesUrls.Count % 6 == 0 ? (item.ImagesUrls.Count / 6) : (item.ImagesUrls.Count / 6) + 1;
                    <table>
                        @for (int iRow = 0; iRow < iRowCount; iRow++)
                        {
                            <tr>
                                @for (int iColumn = 0; iColumn < 6 && iSerial <= item.ImagesUrls.Count; iColumn++)
                                {
                                    string imageUrl = item.ImagesUrls[iSerial - 1];
                                    <td>
                                        <div class="col-md-2 mt-3" style="position:relative">
                                            <img class="item-image" src="@imageUrl" />
                                            <span class="item-serial">@iSerial</span>
                                        </div>
                                    </td>
                                    iSerial++;
                                }
                            </tr>
                        }
                    </table>
                }
            </div>
        </div>
    }
</div>

@code {
    Item? item;

    [SupplyParameterFromQuery]
    public int ItemID { get; set; }
    bool ShowSpinner;
    protected override async Task OnInitializedAsync()
    {
        ShowSpinner = true;
        using var context = DbFactory.CreateDbContext();
        item = await context.Items.Include(x => x.ItemImages).FirstOrDefaultAsync(m => m.ItemID == ItemID);
        if (item?.ItemImages != null)
            item!.ImagesUrls = item.ItemImages.Select(x => x.ImageURL).ToList();
        if (item is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
        ShowSpinner = false;
    }

    public async Task DeleteItem()
    {
        if (await myJSRunTime.ConfirmDelete())
        {
            using var context = DbFactory.CreateDbContext();
            if (item!.ImagesUrls != null && item.ImagesUrls.Count > 0)
            {
                foreach (string imageUrl in item.ImagesUrls)
                {
                    string imageFileName = imageUrl.Replace("ItemsImages/", string.Empty);
                    iFileUpload.DeleteFile(imageFileName);
                }
            }
            context.Items.Remove(item!);
            await context.SaveChangesAsync();
            NavigationManager.NavigateTo("/items");
            await myJSRunTime.ToastrSuccess("تم حذف الصنف بنجاح.");
        }
    }
}
